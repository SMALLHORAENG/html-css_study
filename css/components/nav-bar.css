.nav{
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: #f9f9fa;
    padding: 20px 50px;
    box-sizing: border-box;
    border-top: 1px solid rgba(121,121,121,0.3);
  
}

.nav__list{
    display: flex;
    justify-content: space-between ;
        
}

.nav__link{
    position: relative;
    color: #2e363e;
}

@keyframes notificationAnimation {
    0% {
        transform: none;
    }
    50% {
        transform: translateY(-5px) rotateY(360deg);
    }
    100%{
        transform: none;
    }
}

.nav__btn{
    transform: translateY(50px);
    animation: appearBtnAnimation 0.3s ease-in-out forwards;
    opacity: 0;
}

@keyframes appearBtnAnimation{
 from{
    opacity: 0;
 }
 to{
    transform: none;
    opacity: 1;
 }
    
}

.nav__btn:nth-child(2){
    animation-delay: 0.3s;
}
.nav__btn:nth-child(3){
    animation-delay: 0.6s;
}   
.nav__btn:last-child{
    animation-delay: 0.9s;
}

/* 6.36
    Y축에서 translate 하기위해서 transform: translateY(-5px);
    이후 아래 클래스 안에 적용시켜주기

    translateY는 위 아래로 움직이게 해줌

    rotateY(180deg)는 180도 도는 것 의미 (transform과 연결하여 사용)


    appearBtnAnimation
    transform: translateY(50px) - 이 값에 to를 none주면
    아래에서 nav-bar 부분이 올라오는 애니메이션 됨

    하나씩 올라오게 하기위해 각자 delay를 걸어줌
    모두 같은 포지션에서 시작해서 별로임
    이를 보완해주는것
    ->   nav__btn 부분에 transform: translateY(50px);와
    opacity: 0;을 해주면 더 자연스럽다
    (원래 포지션은 아이콘이 나오는 상태인데
    이걸 포지션을 바 아래로 해주고 opacity를 줘서 해주면
    없다가 생기는 애니메이션으로 됨 그래서 더 자연스러움)
    - 만약 btn부분에 transform값을 넣어주지 않으면
      버튼이 있다가 사라졌다 다시 생겨서 부자연스러움 -

    애니메이션의 반복값에서 마지막 값 기억하기위해 forward 해줌
*/

.nav__notification {
    position: absolute;
    left: 15px;
    /* top: -10px; */
    bottom: 15px;
    animation: notificationAnimation 2s ease-in-out infinite;
}




/* 6.10
    justify-content: space-between
    기본 축을 따라 정렬 컨테이너 내에서 고르게 분포됨
    인접한 항목의 각 쌍 사이의 간격 동일
    첫 번째 항목은 메인 시작 모서리와 같은 높이이고 
    마지막 항목은 메인 끝모서리와 같은 높이
*/

/* 6.11
    FontAweSome 에서 Documentation로 가서 size 얼마나 있는지 확인(sizing icons 클릭)
    (Doc For Web 메뉴에서 확인가능)
    icon 사이즈 2x로 키우기

    reset.css 에서 
    a{ color:inherit;
        text-decoration: none;}
    모든 링크의 색은 부모로 상속받고 밑줄등은 없앤다

    position: fixed 와 bottom: 0;을 하면
    화면을 드래그해도 하단에 고정되게 된다
    거기에 width: 100%를 주면 width가 좌우 전체로 채워지고
    추가로 box-sizing: border-box를 해주므로
    아이콘들이 밖으로 나가지 않고 채워지게 된다

    style.css 에 height:1000vh를 body에 넣어준다
*/

/*  6.12
    Css box
    padding을 설정해주면 그 값만큼 박스의 범위가 좁아짐
    50px를 padding 해주게 됐을 때 박스의 공간
    200px의 박스를 만들면 content를 위한 공간은 150px가 되는 것
    하지만 width를 적용해줄시 content를 위한 공간은 width에 맞게
    적용된다 즉 width200px + padding 50px = 250px
    하지만 width 미적용 200px의 박스가 padding 50px 하면
    content를 위한 공간은 150px의 박스 공간이 된다 

    width: 100%; 는 스크린 전체를 채운다는 의미
    200px의 박스를 생성한 뒤
    box-sizing: border-box는 , padding 50px가 되면
    박스의 content 부분이 150px가 되는데 이렇게 되도
    상관이 없다는 설정(box 사이즈가 커지길 원치않음)
    *박스의 사이즈 늘리기를 원치 않는다*
*/

/* 6.13
    chat icon 위에 span 생성
    <span class="nav__notification">1</span>
    이후 class를 css파일에서 설정
    
    box의 절반값으로 radius를 주면 원이 됨
    
    position: absolute, position: relative 를 이용하여
    알림표시를 만들 수 있는데 이는
    relative가 부모이고 absolute는 자식으로
    위치를 relative기준으로 자유롭게 위치 이동 설정가능
*/
